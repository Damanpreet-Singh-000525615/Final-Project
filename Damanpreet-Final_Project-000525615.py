# -*- coding: utf-8 -*-
"""final_project_upload_on_github.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nQH-DPSpzNn05_F5QiCl1p-g3Wx0nRVv
"""

import pandas as pd
import matplotlib.pyplot as plt

confirmed_cases_url = "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
deaths_url = "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"

confirmed_df = pd.read_csv(confirmed_cases_url)
deaths_df = pd.read_csv(deaths_url)

global_confirmed = confirmed_df.groupby('Country/Region').sum().T.sum()
global_deaths = deaths_df.groupby('Country/Region').sum().T.sum()

global_data = pd.DataFrame({'Confirmed': global_confirmed, 'Deaths': global_deaths})

plt.figure(figsize=(12, 6))
plt.plot(global_data.index, global_data['Confirmed'], label='Confirmed Cases', marker='o')
plt.plot(global_data.index, global_data['Deaths'], label='Deaths', marker='o')
plt.title('Global COVID-19 Confirmed Cases and Deaths Over Time')
plt.xlabel('Date')
plt.ylabel('Count')
plt.legend()
plt.grid(True)
plt.show()

import pandas as pd
import matplotlib.pyplot as plt
from alpha_vantage.timeseries import TimeSeries

# Function to get stock data using AlphaVantage API
def get_stock_data(symbol):
    api_key = 'TC54JI2GWZOZ8I0J'
    ts = TimeSeries(key=api_key, output_format='pandas')
    data, meta_data = ts.get_daily(symbol=symbol, outputsize='full')
    return data[['2. high', '3. low']]

# Define data URLs
confirmed_cases_url = "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
deaths_url = "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"

confirmed_df = pd.read_csv(confirmed_cases_url)
deaths_df = pd.read_csv(deaths_url)

global_confirmed = confirmed_df.groupby('Country/Region').sum().T.sum()
global_deaths = deaths_df.groupby('Country/Region').sum().T.sum()

global_data = pd.DataFrame({'Confirmed': global_confirmed, 'Deaths': global_deaths})

datewise_data = {}
for date in confirmed_df.columns[4:]:
    datewise_data[date] = pd.DataFrame({
        'Confirmed': confirmed_df.groupby('Country/Region')[date].sum(),
        'Deaths': deaths_df.groupby('Country/Region')[date].sum()
    })

saskatchewan_data = datewise_data['12/3/22']

it_stock_symbol = 'AAPL'
precious_metal_stock_symbol = 'GOLD'

it_stock_data = get_stock_data(it_stock_symbol)
precious_metal_stock_data = get_stock_data(precious_metal_stock_symbol)

global_data['IT_Stock_High'] = it_stock_data['2. high']
global_data['IT_Stock_Low'] = it_stock_data['3. low']
global_data['Precious_Metal_Stock_High'] = precious_metal_stock_data['2. high']
global_data['Precious_Metal_Stock_Low'] = precious_metal_stock_data['3. low']

# Print or display the updated dataframe
print(global_data)

import pandas as pd
import matplotlib.pyplot as plt
from alpha_vantage.timeseries import TimeSeries

# Function to get stock data using AlphaVantage API
def get_stock_data(symbol):
    api_key = 'TC54JI2GWZOZ8I0J'
    ts = TimeSeries(key=api_key, output_format='pandas')
    data, meta_data = ts.get_daily(symbol=symbol, outputsize='full')
    return data[['2. high', '3. low']]

confirmed_cases_url = "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
deaths_url = "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"

confirmed_df = pd.read_csv(confirmed_cases_url)
deaths_df = pd.read_csv(deaths_url)

global_confirmed = confirmed_df.groupby('Country/Region').sum().T.sum()
global_deaths = deaths_df.groupby('Country/Region').sum().T.sum()

global_data = pd.DataFrame({'Confirmed': global_confirmed, 'Deaths': global_deaths})

datewise_data = {}
for date in confirmed_df.columns[4:]:
    datewise_data[date] = pd.DataFrame({
        'Confirmed': confirmed_df.groupby('Country/Region')[date].sum(),
        'Deaths': deaths_df.groupby('Country/Region')[date].sum()
    })

saskatchewan_data = datewise_data['12/4/22']

it_stock_symbol = 'AAPL'
precious_metal_stock_symbol = 'GOLD'

it_stock_data = get_stock_data(it_stock_symbol)
precious_metal_stock_data = get_stock_data(precious_metal_stock_symbol)

global_data['IT_Stock_High'] = it_stock_data['2. high']
global_data['IT_Stock_Low'] = it_stock_data['3. low']
global_data['Precious_Metal_Stock_High'] = precious_metal_stock_data['2. high']
global_data['Precious_Metal_Stock_Low'] = precious_metal_stock_data['3. low']

plt.figure(figsize=(12, 6))
plt.plot(global_data.index, global_data['IT_Stock_High'], label='IT Sector - High', marker='o')
plt.plot(global_data.index, global_data['IT_Stock_Low'], label='IT Sector - Low', marker='o')
plt.plot(global_data.index, global_data['Precious_Metal_Stock_High'], label='Precious Metals - High', marker='o')
plt.plot(global_data.index, global_data['Precious_Metal_Stock_Low'], label='Precious Metals - Low', marker='o')
plt.title('Effect of COVID-19 on Stock Prices in 2022')
plt.xlabel('Date')
plt.ylabel('Stock Price')
plt.legend()
plt.grid(True)
plt.show()

date_for_bar_chart = '12/4/22'
top_20_countries = datewise_data[date_for_bar_chart].nlargest(20, 'Confirmed')

colors = plt.cm.viridis(top_20_countries['Confirmed'] / top_20_countries['Confirmed'].max())

plt.figure(figsize=(12, 8))
top_20_countries.plot(kind='barh', y='Confirmed', color=colors)
plt.title('Top 20 Countries by Confirmed COVID-19 Numbers on ' + date_for_bar_chart)
plt.xlabel('Confirmed Cases')
plt.ylabel('Country')
plt.show()



